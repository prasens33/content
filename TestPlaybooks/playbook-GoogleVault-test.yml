id: Google-Vault-Generic-Test
version: -1
name: Google Vault Generic Test
description: This is a test for the Google Vault integration. It calls a variety of
  commands of the integration. If the whole playbook succeeds, then the integration
  is working correctly.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 5934524d-1438-4ad0-8791-b1555eadc552
    type: start
    task:
      id: 5934524d-1438-4ad0-8791-b1555eadc552
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "8"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 50
        }
      }
    note: false
  "1":
    id: "1"
    taskid: 79fd102e-43c7-4890-8dc3-93c1c8739791
    type: regular
    task:
      id: 79fd102e-43c7-4890-8dc3-93c1c8739791
      version: -1
      name: Create matter "playbook test matter 1"
      description: Creates a new matter with the given name and description. The initial
        state is open, and the owner is the method caller. First, checks if a matter
        with the same name already exists.
      script: '|||gvault-create-matter'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "2"
      - "3"
    scriptarguments:
      description:
        simple: wow
      name:
        simple: playbook test matter 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 370
        }
      }
    note: false
  "2":
    id: "2"
    taskid: befea773-6870-431a-86b0-a84324760e32
    type: regular
    task:
      id: befea773-6870-431a-86b0-a84324760e32
      version: -1
      name: Verify matter name
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      expectedValue:
        simple: playbook test matter 1
      fields: {}
      path:
        simple: GoogleVault.Matter.Name
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
    note: false
  "3":
    id: "3"
    taskid: e90095f0-1453-49dd-853a-0583cffb254b
    type: regular
    task:
      id: e90095f0-1453-49dd-853a-0583cffb254b
      version: -1
      name: Verify matter ID
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: GoogleVault.Matter.ID
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 480,
          "y": 545
        }
      }
    note: false
  "4":
    id: "4"
    taskid: 398318b7-6375-409d-8876-b6da98bc7a15
    type: regular
    task:
      id: 398318b7-6375-409d-8876-b6da98bc7a15
      version: -1
      name: Get matter "playbook test matter 1"
      description: Checks if we can get the matter information of the matter that
        was previously created.
      script: '|||gvault-get-matter'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      matterID: {}
      matterName:
        simple: playbook test matter 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 895
        }
      }
    note: false
  "6":
    id: "6"
    taskid: b606797f-f540-4f9e-8d60-555883831a61
    type: regular
    task:
      id: b606797f-f540-4f9e-8d60-555883831a61
      version: -1
      name: Delete Context
      description: Deletes the current context to prevent interference of previous
        data with the rest of the playbook.
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 720
        }
      }
    note: false
  "8":
    id: "8"
    taskid: 92dd44d1-657d-47bf-8ce7-95b40b5b2a42
    type: regular
    task:
      id: 92dd44d1-657d-47bf-8ce7-95b40b5b2a42
      version: -1
      name: Delete Context
      description: Deletes the current context to prevent interference of old remaining
        data from failing the playbook. You can ignore this part, as it is only a
        preventative measure for technical purposes.
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 195
        }
      }
    note: false
  "13":
    id: "13"
    taskid: 85d04574-cb5f-4213-84ac-a793f84d6195
    type: regular
    task:
      id: 85d04574-cb5f-4213-84ac-a793f84d6195
      version: -1
      name: Delete Context
      description: Deleting context so that we can get an updated list of matters
        later
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "14"
      - "24"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 1085
        }
      }
    note: false
  "14":
    id: "14"
    taskid: 7f925647-de28-43a9-889a-b10cced50556
    type: regular
    task:
      id: 7f925647-de28-43a9-889a-b10cced50556
      version: -1
      name: Get "test10" Matter
      description: ""
      script: '|||gvault-get-matter'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "15"
    scriptarguments:
      matterID: {}
      matterName:
        simple: test10
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 335,
          "y": 1310
        }
      }
    note: false
  "15":
    id: "15"
    taskid: ab5965dc-b10d-43c7-881c-274d006f0370
    type: regular
    task:
      id: ab5965dc-b10d-43c7-881c-274d006f0370
      version: -1
      name: Create Hold For Account ID 116238185592796178843
      description: ""
      script: '|||gvault-create-hold'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "16"
    scriptarguments:
      account: {}
      accountID:
        simple: "116238185592796178843"
      corpus:
        simple: Mail
      endTime: {}
      holdName:
        simple: Test Playbook Hold 1
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
      startTime: {}
      terms: {}
      timeFrame: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 335,
          "y": 1520
        }
      }
    note: false
  "16":
    id: "16"
    taskid: 81678837-d86c-4ab3-8ce4-82fa32b83c03
    type: regular
    task:
      id: 81678837-d86c-4ab3-8ce4-82fa32b83c03
      version: -1
      name: Add Held Account 101966936162112532972
      description: ""
      script: '|||gvault-add-heldAccount'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "17"
      - "18"
    scriptarguments:
      account: {}
      accountID:
        simple: "101966936162112532972"
      holdID:
        simple: ${GoogleVault.Hold.ID}
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 335,
          "y": 1695
        }
      }
    note: false
  "17":
    id: "17"
    taskid: fd4a2e6e-3a35-463b-8dbf-24f4ac7f61f7
    type: regular
    task:
      id: fd4a2e6e-3a35-463b-8dbf-24f4ac7f61f7
      version: -1
      name: Remove Held Account
      description: ""
      script: '|||gvault-remove-heldAccount'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      account: {}
      accountID:
        simple: "116238185592796178843"
      holdID:
        simple: ${GoogleVault.Hold.ID}
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 550,
          "y": 1870
        }
      }
    note: false
  "18":
    id: "18"
    taskid: 0c06d746-b115-443a-8349-c8489963ba4e
    type: regular
    task:
      id: 0c06d746-b115-443a-8349-c8489963ba4e
      version: -1
      name: 'Remove Held Account '
      script: '|||gvault-remove-heldAccount'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      account: {}
      accountID:
        simple: "101966936162112532972"
      holdID:
        simple: ${GoogleVault.Hold.ID}
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 120,
          "y": 1870
        }
      }
    note: false
  "19":
    id: "19"
    taskid: aab2acd9-d4e0-44c4-8466-ca44ac02b163
    type: regular
    task:
      id: aab2acd9-d4e0-44c4-8466-ca44ac02b163
      version: -1
      name: Delete Hold
      script: '|||gvault-delete-hold'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      holdID:
        simple: ${GoogleVault.Hold.ID}
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 335,
          "y": 2045
        }
      }
    note: false
  "20":
    id: "20"
    taskid: 32f3a741-8ffc-4f53-8cd0-1ae40bc2587e
    type: regular
    task:
      id: 32f3a741-8ffc-4f53-8cd0-1ae40bc2587e
      version: -1
      name: Create mail export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-mail'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "37"
    scriptarguments:
      IncludeDrafts: {}
      corpus: {}
      dataScope:
        simple: All Data
      emails:
        simple: test@demistodev.com,maya@demistodev.com,dbot@demistodev.com
      endTime: {}
      exportMBOX: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: concat
            args:
              prefix:
                value:
                  simple: mail
              suffix:
                iscontext: true
      exportPST:
        simple: "true"
      includeDrafts:
        simple: "true"
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
      matterName: {}
      ou: {}
      searchMethod:
        simple: Specific Accounts(requires emails argument)
      startTime: {}
      terms:
        simple: subject:test
      timeFrame:
        simple: 7 days ago
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 2045
        }
      }
    note: false
  "21":
    id: "21"
    taskid: c20edaf5-53cf-42c0-8734-5746a6a12c9c
    type: regular
    task:
      id: c20edaf5-53cf-42c0-8734-5746a6a12c9c
      version: -1
      name: Get Export Status
      description: ""
      script: '|||gvault-export-status'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "33"
    scriptarguments:
      exportID:
        simple: ${GoogleVault.Export.ExportID}
      matterId:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 2280
        }
      }
    note: false
  "24":
    id: "24"
    taskid: d7ba89bc-0ab8-45a4-8831-fab5fbf21f4f
    type: title
    task:
      id: d7ba89bc-0ab8-45a4-8831-fab5fbf21f4f
      version: -1
      name: Create Exports
      description: ""
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "26"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1250
        }
      }
    note: false
  "26":
    id: "26"
    taskid: fcef4607-9ae2-4c9c-85c7-8b4909be8f93
    type: regular
    task:
      id: fcef4607-9ae2-4c9c-85c7-8b4909be8f93
      version: -1
      name: GeneratePassword
      description: "This function generates a password and allows various parameters
        to customize the properties of the password depending on the use case (e.g.
        password complexity requirements).  The default behavior is to generate a
        password of  *random length* including all four character classes (upper,
        lower, digits, symbols) with at least five and at most ten characters per
        class. \n\nThe min_* values all default to 0. This means that if the command
        is executed in this way:\n!GeneratePassword max_lcase=10\nIt is possible that
        a password of length zero could be generated. It is therefore recommended
        to always include a min_* parameter that matches. \n\nThe debug parameter
        will print certain properties of the command into the WarRoom for easy diagnostics."
      scriptName: GeneratePassword
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "32"
    scriptarguments:
      debug: {}
      max_digits:
        simple: "8"
      max_lcase:
        simple: "2"
      max_symbols:
        simple: "0"
      max_ucase:
        simple: "2"
      min_digits:
        simple: "5"
      min_lcase:
        simple: "2"
      min_symbols: {}
      min_ucase:
        simple: "2"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1380
        }
      }
    note: false
  "27":
    id: "27"
    taskid: 1a860de4-bf6e-4ce7-8109-e8eddcde7934
    type: regular
    task:
      id: 1a860de4-bf6e-4ce7-8109-e8eddcde7934
      version: -1
      name: Create groups export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-groups'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "31"
    scriptarguments:
      corpus: {}
      dataScope:
        simple: All Data
      endTime: {}
      exportMBOX: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: concat
            args:
              prefix:
                value:
                  simple: groups
              suffix:
                iscontext: true
      exportPST:
        simple: "true"
      groups:
        simple: maya-group-test@demistodev.com,ido-group-test@demistodev.com
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
      matterName: {}
      startTime: {}
      terms:
        simple: subject:*c*
      timeFrame:
        simple: 60 days ago
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1820
        }
      }
    note: false
  "29":
    id: "29"
    taskid: 59004018-8e9f-44a0-822c-81276eb566e6
    type: regular
    task:
      id: 59004018-8e9f-44a0-822c-81276eb566e6
      version: -1
      name: Create drive export
      description: Creates a Google Vault Export in order to perform search actions
        on emails.
      script: '|||gvault-create-export-drive'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "30"
    scriptarguments:
      corpus: {}
      dataScope:
        simple: All Data
      emails:
        simple: test@demistodev.com,maya@demistodev.com
      endTime: {}
      exportName:
        complex:
          root: NEW_PASSWORD
          transformers:
          - operator: concat
            args:
              prefix:
                value:
                  simple: drive
              suffix:
                iscontext: true
      includeTeamDrives:
        simple: "false"
      matterID:
        simple: 0bebe0ec-ee41-4955-96b3-20d9408409c8
      matterName: {}
      ou: {}
      searchMethod:
        simple: Team Drive
      startTime: {}
      teamDrive:
        simple: 0ANbMMsaWJNw2Uk9PVA,0AOM4L2G2JU4NUk9PVA
      terms:
        simple: subject:*test*
      timeFrame: {}
      timeZone: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 1560
        }
      }
    note: false
  "30":
    id: "30"
    taskid: 415d8024-e9e9-4cac-86de-4619a5daca9a
    type: regular
    task:
      id: 415d8024-e9e9-4cac-86de-4619a5daca9a
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "27"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -770,
          "y": 1690
        }
      }
    note: false
  "31":
    id: "31"
    taskid: 50d59bf8-aa71-467a-89a8-a059c75e2823
    type: regular
    task:
      id: 50d59bf8-aa71-467a-89a8-a059c75e2823
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -760,
          "y": 1930
        }
      }
    note: false
  "32":
    id: "32"
    taskid: 6c0f0838-074b-4ec9-8feb-33a4c308dec7
    type: regular
    task:
      id: 6c0f0838-074b-4ec9-8feb-33a4c308dec7
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "29"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -760,
          "y": 1450
        }
      }
    note: false
  "33":
    id: "33"
    taskid: 1af0c121-c40f-4f23-812d-19a0f017c41e
    type: title
    task:
      id: 1af0c121-c40f-4f23-812d-19a0f017c41e
      version: -1
      name: Get results
      type: title
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "34"
      - "35"
      - "36"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 2450
        }
      }
    note: false
  "34":
    id: "34"
    taskid: d1654136-1725-4afd-8a30-fa020c35d95e
    type: regular
    task:
      id: d1654136-1725-4afd-8a30-fa020c35d95e
      version: -1
      name: Get Drive Results
      script: '|||gvault-get-drive-results'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      bucketName:
        simple: 85d7cacf-5d93-44e5-8d37-4ba6da342d02
      maxResult: {}
      viewID:
        simple: ${GoogleVault.Export(val.Name.indexOf('drive') != -1).ViewID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -850,
          "y": 2710
        }
      }
    note: false
  "35":
    id: "35"
    taskid: 352e3323-b3c2-4f99-8348-d136b776cfd6
    type: regular
    task:
      id: 352e3323-b3c2-4f99-8348-d136b776cfd6
      version: -1
      name: Get Mail Results
      script: '|||gvault-get-mail-results'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      bucketName:
        simple: 85d7cacf-5d93-44e5-8d37-4ba6da342d02
      maxResult: {}
      viewID:
        simple: ${GoogleVault.Export(val.Name.indexOf('mail') != -1).ViewID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -340,
          "y": 2710
        }
      }
    note: false
  "36":
    id: "36"
    taskid: ed9c291c-46ff-45c2-860f-a3b606860513
    type: regular
    task:
      id: ed9c291c-46ff-45c2-860f-a3b606860513
      version: -1
      name: Get Groups Results
      script: '|||gvault-get-groups-results'
      type: regular
      iscommand: true
      brand: ""
    scriptarguments:
      bucketName:
        simple: 85d7cacf-5d93-44e5-8d37-4ba6da342d02
      maxResult: {}
      viewID:
        simple: ${GoogleVault.Export(val.Name.indexOf('groups') != -1).ViewID}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 180,
          "y": 2710
        }
      }
    note: false
  "37":
    id: "37"
    taskid: 52c8b21a-893d-4254-89e5-e71d800be42f
    type: regular
    task:
      id: 52c8b21a-893d-4254-89e5-e71d800be42f
      version: -1
      name: Sleep
      description: Sleep for X seconds
      scriptName: Sleep
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "21"
    scriptarguments:
      seconds:
        simple: "90"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -760,
          "y": 2170
        }
      }
    note: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 2755,
        "width": 1780,
        "x": -850,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
